import React, { useRef, useEffect } from 'react';

const App = () => {
  const videoRef = useRef(null);
  let rafId = null; // Request Animation Frame ID
  let lastScrollTime = Date.now(); // Last scroll time

  useEffect(() => {
    const video = videoRef.current;
    let isPlaying = false;

    const handleScroll = () => {
      // Cancel previous requestAnimationFrame
      cancelAnimationFrame(rafId);

      // Calculate time elapsed since last scroll
      const now = Date.now();
      const timeSinceLastScroll = now - lastScrollTime;

      // Check if video is visible on the screen
      const scrollPosition = window.pageYOffset;
      const videoOffsetTop = video.offsetTop;
      const videoHeight = video.offsetHeight;

      if (scrollPosition >= videoOffsetTop && scrollPosition < videoOffsetTop + videoHeight) {
        if (video.readyState >= 2) { // Check if video metadata is loaded
          const videoProgress = (scrollPosition - videoOffsetTop) / videoHeight;
          const currentTime = video.duration * videoProgress;

          // Play video if scrolling down
          if (scrollPosition > videoOffsetTop + videoHeight / 2 && !isPlaying) {
            video.play();
            isPlaying = true;
          }
          // Pause video if scrolling up
          else if (scrollPosition < videoOffsetTop + videoHeight / 2 && isPlaying) {
            video.pause();
            isPlaying = false;
          }

          video.currentTime = currentTime;
        }
      }


      // If there is no scroll/mouse movement for 300ms, stop video
      if (timeSinceLastScroll > 300 && isPlaying) {
        video.pause();
        isPlaying = false;
      }

      // Update last scroll time
      lastScrollTime = now;

      // Request next animation frame
      rafId = requestAnimationFrame(handleScroll);
    };

    const handleVideoEnded = () => {
      // Add logic to smoothly scroll to blue screen
      const blueScreenOffsetTop = window.innerHeight; // Replace this with the offset top of your blue screen component
      window.scrollTo({ top: blueScreenOffsetTop, behavior: 'smooth' });
    };

    video.addEventListener('ended', handleVideoEnded);

    window.addEventListener('scroll', handleScroll);

    return () => {
      video.removeEventListener('ended', handleVideoEnded);
      window.removeEventListener('scroll', handleScroll);
      cancelAnimationFrame(rafId);
    };
  }, []);

  return (
    <div>
      {/* Add any other components or content for your app */}
      <div style={{ height: '2500px' }}>
        {/* Placeholder for scrolling */}
      </div>
      <video
        ref={videoRef}
        src={require('./assets/BackGround_Video.mp4')}
        muted
        loop
        style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', objectFit: 'cover', zIndex: -1 }}
        onLoadedMetadata={() => {
          // Access video duration after metadata is loaded
          console.log('Video duration:', videoRef.current.duration);
        }}
      />
      {/* Blue screen component */}
      <div style={{ height: '100vh', backgroundColor: 'blue' }}>
        <h1 style={{ textAlign: 'center', color: 'white', paddingTop: '40vh' }}>
          Blue Screen
        </h1>
      </div>
    </div>
  );
};

export default App;
